Tipos De Dados

*Int     *Boolean
*Long    *Char
*Float   *Byte
*Double  *Short
*Array   *Null!

Para dar o valor M√°ximo de cada dadoüëá

println(Int.MAX_VALUE)
println(Double.MAX_VALUE)
println(Float.MAX_VALUE)
println(Byte.MAX_VALUE)

Convers√£o de dados.

toByte()
toShort()
toInt()
toLong()
toFloat()
toDouble()
toChar()


Como declarar vari√°veis

*Var (Valor mut√°vel, CamelCase):
  ¬∞Vari√°vel que pode ter ser valor alterado durante o c√≥digo;

*Val (valor imut√°vel, CamelCase):
  ¬∞Vari√°vel que ter√° somente o valor atribu√≠do
    (similar ao final em Java);

*Const Val (valor imut√°vel, SNAKE_CASE):
  ¬∞Constante cujo valor e atribu√≠do durante compila√ß√£o.



Poss√≠veis erros

1 var currentAge
2 currentAge = 22 //ERRO!

Uma vari√°vel n√£o pode ser
declarada sem tipo e sem 
       atribui√ß√£o!

1 var currentYear = "Ano"
2 currentYear = 2022 //ERRO!

Uma vari√°vel com infer√™ncia
de tipo s√≥ receber√° valores do
mesmo tipo que a sua primeira
atribui√ß√£o.




Nullability

*Qualquer tipo pode ser nulo, porem isso deve ser
 explicitado na declara√ß√£o de vari√°vel atraves do
 uso da interoga√ß√£o (?);

*A infer√™ncia de tipo n√£o atribui nullability;


     1 var month:Int? = null
     2 //Atribui valor null corretamente a month
     3
     4 var day:Int = null
     5 /* Erro de compila√ß√£o
     6 "Null can not be a value of a non-null type Int */

Operadores Aritimeticos

* Os operadores podem ser 
  chamados tanto como
  express√£o quanto como 
  Comando. O resultado sera
  o mesmo.

* A fun√ß√£o de soma tambem
  funciona para concatenar
  Strings;

Operadores comparativos

*Os comandos compareTo
 retornam os valores -1
(menor que), 0 (igual) ou
 1(maior). Ja os operadores
 retornam valores booleanos;

*O comando equals retorna 
 um booleano;

Operadores l√≥gico

*Quando utiliza-se o
 comando, e recomendado
 colocar a expressao entre
 parenteses;

Fun√ß√£o e          Comando
express√£o     

E (&&)            (express√£o1) and
                  (express√£o2)

Ou (||)           (express√£o1) or
                  (express√£o2) 

Operadores In e range

*Se valor esta presente em uma lista ou uma
 faixa (range) de valores;

*Range cria um intervalo de valores que
 inicia no primeiro parametro e acaba no
 segundo.

1 val numbers = list0f (3, 9, 0, 1, 2)
2 print(12 in numbers)
3 //false
4
5 print(12 in 0..12)
6 //true

 Fun√ß√µes e
 express√µes
 
cont√©m  (In)

N√£o cont√©m (!In)

range/Faixa
de valores
(Int..Int)


Manipula√ß√£o de Strings

*Strings possuem diversos m√©todos associados;

*Indexa√ß√£o, concatena√ß√£o, compara√ß√£o,
 formata√ß√£o.

*Pode se concatenada com plus/+;

*Tambem e tratada com um array de Char;


Indexa√ß√£o

*String como array;
*First(), last(), String.length, String[index];

1 val s = "Ola, mundo!"
2
2
3 println(s[0])
4 println(s.first())
5 //imprime 0
6
7 println(s[s.length-1])
8 println(s.last())
9 //imprime !

Concatena√ß√£o

*Para concatenar duas
 stringd o plus/+ pode ser
 utilizado;
*PAra concatenar uma 
 variavel a uma string, os
 simbolos ${} devem ser inseridos:

1 val name = "Ana"
2 val s = "Ola"
3
4 println(s + name)
5 //imprime OlaAna
6 println("${s}, ${name}!")
7 //imprime Ola, Ana!
8 println("Bem vindo(o), $name!"
9 //imprime Bem vinda(o), Ana!
